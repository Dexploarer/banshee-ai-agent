name: Release

on:
  push:
    tags:
      - 'v*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      release_id: ${{ steps.release.outputs.id }}
    steps:
      - name: Create Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-release:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
        include:
          - platform: macos-latest
            target: universal-apple-darwin
            arch: universal
          - platform: ubuntu-20.04
            target: x86_64-unknown-linux-gnu
            arch: x86_64
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
            arch: x86_64

    runs-on: ${{ matrix.platform }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Rust cache
      uses: swatinem/rust-cache@v2
      with:
        workspaces: './src-tauri -> target'

    - name: Install system dependencies (Ubuntu)
      if: matrix.platform == 'ubuntu-20.04'
      run: |
        sudo apt-get update
        sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

    - name: Install dependencies
      run: bun install

    - name: Build application
      run: bun run build

    - name: Upload Release Asset (macOS)
      if: matrix.platform == 'macos-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: src-tauri/target/universal-apple-darwin/release/bundle/dmg/Banshee_*.dmg
        asset_name: Banshee-${{ matrix.arch }}.dmg
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (Ubuntu)
      if: matrix.platform == 'ubuntu-20.04'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: src-tauri/target/x86_64-unknown-linux-gnu/release/bundle/appimage/banshee_*.AppImage
        asset_name: Banshee-${{ matrix.arch }}.AppImage
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (Windows)
      if: matrix.platform == 'windows-latest'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: src-tauri/target/x86_64-pc-windows-msvc/release/bundle/msi/Banshee_*.msi
        asset_name: Banshee-${{ matrix.arch }}.msi
        asset_content_type: application/octet-stream